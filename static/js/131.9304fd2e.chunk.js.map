{"version":3,"file":"static/js/131.9304fd2e.chunk.js","mappings":"4KACA,MAA4B,6B,SCErB,SAASA,EAAT,GAAiC,IAAZC,EAAW,EAAXA,SACxB,OAAO,gBAAKC,UAAWC,EAAhB,SAAgCF,GAC1C,C,6HCJD,EAAuB,0BAAvB,EAAyD,2BAAzD,EAA4F,2BAA5F,EAAgI,4B,mCCIzH,SAASG,IACZ,IAAMC,GAAWC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMF,SAASA,SAASG,KAAnC,IACvBC,GAAWC,EAAAA,EAAAA,MACjB,GAAgCC,EAAAA,EAAAA,UAAS,CAAEC,KAAM,GAAIC,OAAQ,KAA7D,eAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAACC,GAClB,MAAwBA,EAAEC,cAAlBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MACdJ,GAAY,SAACK,GAAD,eAAC,UAAuBA,GAAxB,cAAuCR,EAAOO,GAA9C,GACf,EAEKE,EAAU,mCAAG,WAAOJ,GAAP,8EACfA,EAAEK,iBAEMV,EAAiBE,EAAjBF,KAAMC,EAAWC,EAAXD,QAEVR,EAASkB,MAAK,SAACC,GAAD,OAAaA,EAAQZ,OAASA,CAA9B,IALH,uBAMXa,MAAM,GAAD,OAAIb,EAAJ,6BANM,iCAUTc,EAAa,CACfd,KAAAA,EACAC,OAAAA,GAZW,SAeTJ,GAASkB,EAAAA,EAAAA,IAAgBD,IAfhB,wBAgBTjB,GAASmB,EAAAA,EAAAA,OAhBA,QAiBfC,IAjBe,4CAAH,sDAoBVA,EAAc,WAChBd,EAAY,CAAEH,KAAM,GAAIC,OAAQ,IACnC,EAED,OACI,kBAAMX,UAAWC,EAAU2B,SAAUT,EAArC,WACI,mBAAOnB,UAAWC,EAAlB,iCAEI,kBACID,UAAWC,EACXgB,MAAOL,EAASF,KAChBmB,SAAUf,EACVgB,KAAK,OACLpB,KAAK,OACLqB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGhB,mBAAOjC,UAAWC,EAAlB,6FAEI,kBACID,UAAWC,EACX6B,KAAK,MACLpB,KAAK,SACLqB,QAAQ,yFACRC,MAAM,+FACNf,MAAOL,EAASD,OAChBkB,SAAUf,EACVmB,UAAQ,QAGhB,mBAAQjC,UAAWC,EAAY6B,KAAK,SAApC,8HAKX,CCvED,MAAuB,0BAAvB,EAAwD,0BAAxD,EAAiG,kCAAjG,EAAkJ,kCCI3I,SAASI,IACZ,IAAM/B,GAAWC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMF,SAASA,SAASG,KAAnC,IACvB6B,GAAa/B,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMF,SAASiC,MAA1B,IACzB7B,GAAWC,EAAAA,EAAAA,MAEX6B,EAAmB,mCAAG,WAAOC,GAAP,iFAClB/B,GAASgC,EAAAA,EAAAA,IAAmBD,IADV,uBAElB/B,GAASmB,EAAAA,EAAAA,OAFS,2CAAH,sDAWnBc,EANmB,SAACrC,EAAUgC,GAChC,OAAOhC,EAASiC,QAAO,SAAAd,GAAO,OAC1BA,EAAQZ,KAAK+B,cAAcC,SAASP,EAAWM,cADrB,GAGjC,CAEmBE,CAAiBxC,EAAUgC,GAM/C,OAJAS,EAAAA,EAAAA,YAAU,WACNrC,GAASmB,EAAAA,EAAAA,MACZ,GAAE,CAACnB,KAGA,eAAIP,UAAWC,EAAf,SACKuC,EAAYK,KAAI,gBAAGC,EAAH,EAAGA,GAAIpC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACb,gBAAIX,UAAWC,EAAf,WACI,cAAGD,UAAWC,EAAd,SACKS,KAEL,uBAAIC,KACJ,mBAAQX,UAAWC,EAAkB6B,KAAK,SAASiB,QAAS,kBAAMV,EAAoBS,EAA1B,EAA5D,gEAL0BA,EADjB,KAa5B,C,sBCtCM,SAASE,IAEZ,IAAMb,GAAa/B,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMF,SAASiC,MAA1B,IACzB7B,GAAWC,EAAAA,EAAAA,MAMjB,OACI,kBAAOR,UAAU,gBAAjB,UACI,kBACAA,UAAU,gBACV8B,KAAK,OACLb,MAAOkB,EACPN,SAVa,SAACd,GAClBR,GAAS0C,EAAAA,EAAAA,IAAUlC,EAAEC,cAAcC,OACpC,KAaN,CCCD,MAlBA,WACI,IAAMd,GAAWC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMF,SAASA,SAASG,KAAnC,IAE7B,OACI,UAACR,EAAA,EAAD,YACI,eAAIE,UAAU,gBAAd,oGACA,SAACE,EAAD,KACA,eAAIF,UAAU,gBAAd,8FACA,SAAC,EAAD,IACqB,IAApBG,EAAS+C,QACN,cAAGlD,UAAU,eAAb,uSAEA,SAACkC,EAAD,MAIf,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Container/Container.module.css?9f71","components/Container/Container.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","components/Filter/Filter.js","pages/Contacts/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__VVOCq\"};","import css from './Container.module.css';\nimport PropTypes from 'prop-types'; \n\nexport function Container ({children}) {\n    return <div className={css.container}>{children}</div>\n};\n\nContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n  };","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import css from './ContactForm.module.css';\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContactThunk, getContactsThunk } from '../../redux/thunks';\n\nexport function ContactForm() {\n    const contacts = useSelector((state) => state.contacts.contacts.items);\n    const dispatch = useDispatch();\n    const [userData, setUserData] = useState({ name: '', number: '' });\n\n    const handleChange = (e) => {\n        const { name, value } = e.currentTarget;\n        setUserData((prevUserData) => ({ ...prevUserData, [name]: value }));\n    };\n\n    const formSubmit = async (e) => {\n        e.preventDefault();\n\n        const { name, number } = userData;\n\n        if (contacts.find((contact) => contact.name === name)) {\n            alert(`${name} is already in contacts.`);\n            return;\n        }\n\n        const newContact = {\n            name,\n            number,\n        };\n\n        await dispatch(addContactThunk(newContact));\n        await dispatch(getContactsThunk());\n        handleReset();\n    };\n\n    const handleReset = () => {\n        setUserData({ name: '', number: '' });\n    };\n\n    return (\n        <form className={css.form} onSubmit={formSubmit}>\n            <label className={css.label}>\n                Ім'я\n                <input\n                    className={css.input}\n                    value={userData.name}\n                    onChange={handleChange}\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                />\n            </label>\n            <label className={css.label}>\n                Номер телефону\n                <input\n                    className={css.input}\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    value={userData.number}\n                    onChange={handleChange}\n                    required\n                />\n            </label>\n            <button className={css.button} type=\"submit\">\n                Додати новий контакт\n            </button>\n        </form>\n    );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"contact_name\":\"ContactList_contact_name__Jt8ih\",\"deleteButton\":\"ContactList_deleteButton__3hT3n\"};","import css from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContactThunk, getContactsThunk } from '../../redux/thunks';\nimport { useEffect } from 'react';\n\nexport function ContactList() {\n    const contacts = useSelector((state) => state.contacts.contacts.items);\n    const filterName = useSelector((state) => state.contacts.filter);\n    const dispatch = useDispatch();\n\n    const handleDeleteContact = async (contactId) => {\n        await dispatch(deleteContactThunk(contactId));\n        await dispatch(getContactsThunk());\n    };\n\n    const filteredContacts = (contacts, filterName) => {\n        return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(filterName.toLowerCase()),\n        );\n    };\n\n    const newContacts = filteredContacts(contacts, filterName);\n\n    useEffect(() => {\n        dispatch(getContactsThunk());\n    }, [dispatch]);\n\n    return (\n        <ul className={css.list}>\n            {newContacts.map(({ id, name, number }) => (\n                <li className={css.item} key={id}>\n                    <p className={css.contact_name}>\n                        {name} \n                    </p>\n                    <p>{number}</p>\n                    <button className={css.deleteButton} type=\"button\" onClick={() => handleDeleteContact(id)}>\n                        Видалити\n                    </button>\n                </li>\n            ))}\n        </ul>\n    );\n}\n","import { useSelector, useDispatch } from 'react-redux'\nimport { setFilter } from '../../redux/contactsSlice';\nimport './Filter.css';\n\nexport function Filter () {\n\n    const filterName = useSelector((state) => state.contacts.filter);\n    const dispatch = useDispatch();\n\n    const changeFilter = (e) => {\n        dispatch(setFilter(e.currentTarget.value));\n      };\n\n    return (\n        <label className='filter__label'>\n            <input\n            className='filter__input'\n            type=\"text\"\n            value={filterName}\n            onChange={changeFilter}\n            >\n            </input>\n        </label>\n    );\n};","import { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { Container } from \"components/Container/Container\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { useSelector } from 'react-redux';\nimport './Contacts.css';\n\nfunction Contacts() {\n    const contacts = useSelector((state) => state.contacts.contacts.items);\n\n    return (\n        <Container>\n            <h2 className=\"contactsTitle\">Книга контактів</h2>\n            <ContactForm />\n            <h2 className=\"contactsTitle\">Знайти контакт</h2>\n            <Filter />\n            {contacts.length === 0 ? (\n                <p className=\"emptyMessage\">Ваша телефона книга пуста. Додайте, будь-ласка, контакт</p>\n            ) : (\n                <ContactList />\n            )}\n        </Container>\n    );\n}\n\nexport default Contacts;\n"],"names":["Container","children","className","css","ContactForm","contacts","useSelector","state","items","dispatch","useDispatch","useState","name","number","userData","setUserData","handleChange","e","currentTarget","value","prevUserData","formSubmit","preventDefault","find","contact","alert","newContact","addContactThunk","getContactsThunk","handleReset","onSubmit","onChange","type","pattern","title","required","ContactList","filterName","filter","handleDeleteContact","contactId","deleteContactThunk","newContacts","toLowerCase","includes","filteredContacts","useEffect","map","id","onClick","Filter","setFilter","length"],"sourceRoot":""}